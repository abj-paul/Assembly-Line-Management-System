{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ConstantsService } from '../services/constants.service';\nConstantsService;\nlet LoginComponent = class LoginComponent {\n  constructor(constants) {\n    this.constants = constants;\n    this.username = \"\";\n    this.password = \"\";\n    this.loginStatus = \"\";\n    this.role = \"\";\n  }\n  authenticate() {\n    let url = \"\";\n    if (this.role == \"admin\") url = this.constants.SERVER_IP_ADDRESS + \"admin\";else if (this.role == \"productionManager\") url = this.constants.SERVER_IP_ADDRESS + \"productionManager\";else if (this.role == \"lineChief\") url = this.constants.SERVER_IP_ADDRESS + \"lineChief\";else if (this.role == \"supervisor\") url = this.constants.SERVER_IP_ADDRESS + \"supervisor\";\n    const data = {\n      \"operation\": \"login\",\n      \"username\": this.username,\n      \"password\": this.password\n    };\n    fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(resolve => {\n      console.log(\"Authentication has been done!\");\n      return resolve.json();\n    }).then(data => {\n      console.log(data.authentication);\n      this.loginStatus = \"Status: \" + data.authentication;\n      sessionStorage.setItem(\"userid\", data.userInfo.userid);\n      sessionStorage.setItem(\"username\", data.userInfo.username);\n      sessionStorage.setItem(\"password\", data.userInfo.password);\n      sessionStorage.setItem(\"age\", data.userInfo.age);\n      sessionStorage.setItem(\"role\", data.userInfo.role);\n      sessionStorage.setItem(\"general_info\", data.userInfo.general_info);\n      sessionStorage.setItem(\"userHash\", data.userHash);\n      if (data.nextPage != \"none\") window.location.href = data.nextPage;\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":"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","names":["Component","ConstantsService","LoginComponent","constructor","constants","authenticate","url","role","SERVER_IP_ADDRESS","data","username","password","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","then","resolve","console","log","json","authentication","loginStatus","sessionStorage","setItem","userInfo","userid","age","general_info","userHash","nextPage","window","location","href","catch","err","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/abhijit/Assembly-Line-Management-System/frontend/src/app/login/login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConstantsService } from '../services/constants.service';\nConstantsService\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = \"\";\n  password: string = \"\";\n  loginStatus: string = \"\";\n  role: string = \"\";\n\n  \n  constructor(private constants: Constants) { }\n\n  authenticate(){\n    let url = \"\";\n    if(this.role==\"admin\") url = this.constants.SERVER_IP_ADDRESS + \"admin\";\n    else if(this.role==\"productionManager\") url = this.constants.SERVER_IP_ADDRESS + \"productionManager\";\n    else if(this.role==\"lineChief\") url = this.constants.SERVER_IP_ADDRESS + \"lineChief\";\n    else if(this.role==\"supervisor\") url = this.constants.SERVER_IP_ADDRESS + \"supervisor\";\n\n    const data = {\n      \"operation\":\"login\",\n      \"username\": this.username,\n      \"password\": this.password\n    };\n\n    fetch(url, {\n      method: \"POST\",\n      mode: \"cors\", \n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\"Content-Type\": \"application/json\",},\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(data),\n  })\n      .then((resolve)=>{\n          console.log(\"Authentication has been done!\");\n          return resolve.json()\n      })\n      .then((data)=>{\n          console.log(data.authentication);\n          this.loginStatus = \"Status: \"+data.authentication;\n          sessionStorage.setItem(\"userid\", data.userInfo.userid);\n          sessionStorage.setItem(\"username\", data.userInfo.username);\n          sessionStorage.setItem(\"password\", data.userInfo.password);\n          sessionStorage.setItem(\"age\", data.userInfo.age);\n          sessionStorage.setItem(\"role\", data.userInfo.role);\n          sessionStorage.setItem(\"general_info\", data.userInfo.general_info);\n          sessionStorage.setItem(\"userHash\", data.userHash);\n\n        if(data.nextPage!=\"none\") window.location.href = data.nextPage;\n      })\n      .catch((err)=>{\n          console.log(err);\n      });\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}