{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(constants) {\n    this.constants = constants;\n    this.username = \"\";\n    this.password = \"\";\n    this.loginStatus = \"\";\n  }\n  authenticate(username, password, role) {\n    let url = \"\";\n    if (role == \"admin\") url = this.constants.SERVER_IP_ADDRESS + \"admin\";else if (role == \"productionManager\") url = this.constants.SERVER_IP_ADDRESS + \"productionManager\";else if (role == \"lineChief\") url = this.constants.SERVER_IP_ADDRESS + \"lineChief\";else if (role == \"supervisor\") url = this.constants.SERVER_IP_ADDRESS + \"supervisor\";\n    const data = {\n      \"operation\": \"login\",\n      \"username\": username,\n      \"password\": password\n    };\n    fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(resolve => {\n      console.log(\"Authentication has been done!\");\n      return resolve.json();\n    }).then(data => {\n      console.log(data.authentication);\n      sessionStorage.setItem(\"userid\", data.userInfo.userid);\n      sessionStorage.setItem(\"username\", data.userInfo.username);\n      sessionStorage.setItem(\"password\", data.userInfo.password);\n      sessionStorage.setItem(\"age\", data.userInfo.age);\n      sessionStorage.setItem(\"role\", data.userInfo.role);\n      sessionStorage.setItem(\"general_info\", data.userInfo.general_info);\n      sessionStorage.setItem(\"userHash\", data.userHash);\n      if (data.nextPage != \"none\") window.location.href = data.nextPage;\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YAAoBC,SAAoB;IAApB,cAAS,GAATA,SAAS;IAN7B,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;IAErB,gBAAW,GAAW,EAAE;EAGoB;EAE5CC,YAAY,CAACC,QAAgB,EAAEC,QAAe,EAAEC,IAAW;IACzD,IAAIC,GAAG,GAAG,EAAE;IACZ,IAAGD,IAAI,IAAE,OAAO,EAAEC,GAAG,GAAG,IAAI,CAACL,SAAS,CAACM,iBAAiB,GAAG,OAAO,CAAC,KAC9D,IAAGF,IAAI,IAAE,mBAAmB,EAAEC,GAAG,GAAG,IAAI,CAACL,SAAS,CAACM,iBAAiB,GAAG,mBAAmB,CAAC,KAC3F,IAAGF,IAAI,IAAE,WAAW,EAAEC,GAAG,GAAG,IAAI,CAACL,SAAS,CAACM,iBAAiB,GAAG,WAAW,CAAC,KAC3E,IAAGF,IAAI,IAAE,YAAY,EAAEC,GAAG,GAAG,IAAI,CAACL,SAAS,CAACM,iBAAiB,GAAG,YAAY;IAEjF,MAAMC,IAAI,GAAG;MACX,WAAW,EAAC,OAAO;MACnB,UAAU,EAAEL,QAAQ;MACpB,UAAU,EAAEC;KACb;IAEDK,KAAK,CAACH,GAAG,EAAE;MACTI,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,UAAU;MACjBC,WAAW,EAAE,aAAa;MAC1BC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAE;MAC9CC,QAAQ,EAAE,QAAQ;MAClBC,cAAc,EAAE,aAAa;MAC7BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;KAC5B,CAAC,CACGY,IAAI,CAAEC,OAAO,IAAG;MACbC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,OAAOF,OAAO,CAACG,IAAI,EAAE;IACzB,CAAC,CAAC,CACDJ,IAAI,CAAEZ,IAAI,IAAG;MACVc,OAAO,CAACC,GAAG,CAACf,IAAI,CAACiB,cAAc,CAAC;MAChCC,cAAc,CAACC,OAAO,CAAC,QAAQ,EAAEnB,IAAI,CAACoB,QAAQ,CAACC,MAAM,CAAC;MACtDH,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEnB,IAAI,CAACoB,QAAQ,CAACzB,QAAQ,CAAC;MAC1DuB,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEnB,IAAI,CAACoB,QAAQ,CAACxB,QAAQ,CAAC;MAC1DsB,cAAc,CAACC,OAAO,CAAC,KAAK,EAAEnB,IAAI,CAACoB,QAAQ,CAACE,GAAG,CAAC;MAChDJ,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEnB,IAAI,CAACoB,QAAQ,CAACvB,IAAI,CAAC;MAClDqB,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEnB,IAAI,CAACoB,QAAQ,CAACG,YAAY,CAAC;MAClEL,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEnB,IAAI,CAACwB,QAAQ,CAAC;MAEnD,IAAGxB,IAAI,CAACyB,QAAQ,IAAE,MAAM,EAAEC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG5B,IAAI,CAACyB,QAAQ;IAChE,CAAC,CAAC,CACDI,KAAK,CAAEC,GAAG,IAAG;MACVhB,OAAO,CAACC,GAAG,CAACe,GAAG,CAAC;IACpB,CAAC,CAAC;EACN;CAED;AArDYvC,cAAc,eAL1BD,SAAS,CAAC;EACTyC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW1C,cAAc,CAqD1B;SArDYA,cAAc","names":["Component","LoginComponent","constructor","constants","authenticate","username","password","role","url","SERVER_IP_ADDRESS","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","then","resolve","console","log","json","authentication","sessionStorage","setItem","userInfo","userid","age","general_info","userHash","nextPage","window","location","href","catch","err","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/abhijit/Assembly-Line-Management-System/frontend/src/app/login/login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = \"\";\n  password: string = \"\";\n\n  loginStatus: string = \"\"\n\n  \n  constructor(private constants: Constants) { }\n\n  authenticate(username: string, password:string, role:string){\n    let url = \"\";\n    if(role==\"admin\") url = this.constants.SERVER_IP_ADDRESS + \"admin\";\n    else if(role==\"productionManager\") url = this.constants.SERVER_IP_ADDRESS + \"productionManager\";\n    else if(role==\"lineChief\") url = this.constants.SERVER_IP_ADDRESS + \"lineChief\";\n    else if(role==\"supervisor\") url = this.constants.SERVER_IP_ADDRESS + \"supervisor\";\n\n    const data = {\n      \"operation\":\"login\",\n      \"username\": username,\n      \"password\": password\n    };\n\n    fetch(url, {\n      method: \"POST\",\n      mode: \"cors\", \n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\"Content-Type\": \"application/json\",},\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(data),\n  })\n      .then((resolve)=>{\n          console.log(\"Authentication has been done!\");\n          return resolve.json()\n      })\n      .then((data)=>{\n          console.log(data.authentication);\n          sessionStorage.setItem(\"userid\", data.userInfo.userid);\n          sessionStorage.setItem(\"username\", data.userInfo.username);\n          sessionStorage.setItem(\"password\", data.userInfo.password);\n          sessionStorage.setItem(\"age\", data.userInfo.age);\n          sessionStorage.setItem(\"role\", data.userInfo.role);\n          sessionStorage.setItem(\"general_info\", data.userInfo.general_info);\n          sessionStorage.setItem(\"userHash\", data.userHash);\n\n        if(data.nextPage!=\"none\") window.location.href = data.nextPage;\n      })\n      .catch((err)=>{\n          console.log(err);\n      });\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}