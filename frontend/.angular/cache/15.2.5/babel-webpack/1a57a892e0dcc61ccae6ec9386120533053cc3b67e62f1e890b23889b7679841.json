{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/constants.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/access-control.service\";\nimport * as i4 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(constantsService, router, accessControlService) {\n    this.constantsService = constantsService;\n    this.router = router;\n    this.accessControlService = accessControlService;\n    this.username = \"\";\n    this.password = \"\";\n    this.loginStatus = \"\";\n    this.role = \"\";\n  }\n  authenticate() {\n    let url = \"\";\n    if (this.role == \"admin\") url = this.constantsService.SERVER_IP_ADDRESS + \"admin\";else if (this.role == \"productionManager\") url = this.constantsService.SERVER_IP_ADDRESS + \"productionManager\";else if (this.role == \"lineChief\") url = this.constantsService.SERVER_IP_ADDRESS + \"lineChief\";else if (this.role == \"supervisor\") url = this.constantsService.SERVER_IP_ADDRESS + \"supervisor\";\n    const data = {\n      \"operation\": \"login\",\n      \"username\": this.username,\n      \"password\": this.password\n    };\n    fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(resolve => {\n      console.log(\"Authentication has been done!\");\n      return resolve.json();\n    }).then(data => {\n      console.log(data.authentication);\n      this.loginStatus = \"Status: \" + data.authentication;\n      /*\n      sessionStorage.setItem(\"userid\", data.userInfo.userid);\n      sessionStorage.setItem(\"username\", data.userInfo.username);\n      sessionStorage.setItem(\"password\", data.userInfo.password);\n      sessionStorage.setItem(\"age\", data.userInfo.age);\n      sessionStorage.setItem(\"role\", data.userInfo.role);\n      sessionStorage.setItem(\"general_info\", data.userInfo.general_info);\n      sessionStorage.setItem(\"userHash\", data.userHash);\n      */\n      this.accessControlService.setUser({\n        \"userid\": data.userInfo.userid,\n        \"username\": data.userInfo.username,\n        \"age\": data.userInfo.age,\n        \"role\": data.userInfo.role,\n        \"general_info\": data.userInfo.general_info,\n        \"userHash\": data.userHash\n      });\n      if (data.nextPage != \"none\") {\n        if (data.nextPage == \"admin-dashboard.html\") this.router.navigate([\"admin-dashboard\"]);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ConstantsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccessControlService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[1, \"container\", \"loginBody\"], [\"src\", \"../../assets/alms-profile.png\", 1, \"img\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Enter Username\", \"name\", \"username\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Enter Password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"dropDown\"], [\"name\", \"role\", 1, \"form-control\", \"bootstrap-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"admin\", \"selected\", \"selected\"], [\"value\", \"admin\"], [\"value\", \"productionManager\"], [\"value\", \"lineChief\"], [\"value\", \"supervisor\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"badge\", \"badge-secondary\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"img\", 1);\n      i0.ɵɵelementStart(2, \"form\")(3, \"div\", 2)(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"select\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_select_ngModelChange_8_listener($event) {\n        return ctx.role = $event;\n      });\n      i0.ɵɵelementStart(9, \"option\", 7);\n      i0.ɵɵtext(10, \"Select Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 8);\n      i0.ɵɵtext(12, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\", 9);\n      i0.ɵɵtext(14, \"Production Manager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"option\", 10);\n      i0.ɵɵtext(16, \"Line Chief\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"option\", 11);\n      i0.ɵɵtext(18, \"Supervisor\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n        return ctx.authenticate();\n      });\n      i0.ɵɵtext(20, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"span\", 13);\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.role);\n      i0.ɵɵadvance(14);\n      i0.ɵɵtextInterpolate(ctx.loginStatus);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\".loginBody[_ngcontent-%COMP%]{\\n    padding: 50px;\\n    margin: auto;\\n    width: 30%;\\n    text-align: center;\\n    margin-top: 50px;\\n\\n    background-image: url('login-bg.jpg');\\n    height: 50%;\\n}\\n\\n.img[_ngcontent-%COMP%]{\\n    width: 300px;\\n    margin: auto;\\n    margin-bottom: 20px;\\n}\\n\\ninput[_ngcontent-%COMP%]{\\n    padding: 10px;\\n    margin-bottom: 20px;\\n}\\nbutton[_ngcontent-%COMP%]{\\n    margin: auto;\\n}\\n\\n.dropDown[_ngcontent-%COMP%]{\\n    margin-bottom: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsWUFBWTtJQUNaLFVBQVU7SUFDVixrQkFBa0I7SUFDbEIsZ0JBQWdCOztJQUVoQixxQ0FBa0Q7SUFDbEQsV0FBVztBQUNmOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7SUFDWixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubG9naW5Cb2R5e1xuICAgIHBhZGRpbmc6IDUwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHdpZHRoOiAzMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG5cbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9hc3NldHMvbG9naW4tYmcuanBnXCIpO1xuICAgIGhlaWdodDogNTAlO1xufVxuXG4uaW1ne1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuaW5wdXR7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuYnV0dG9ue1xuICAgIG1hcmdpbjogYXV0bztcbn1cblxuLmRyb3BEb3due1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["LoginComponent","constructor","constantsService","router","accessControlService","authenticate","url","role","SERVER_IP_ADDRESS","data","username","password","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","then","resolve","console","log","json","authentication","loginStatus","setUser","userInfo","userid","age","general_info","userHash","nextPage","navigate","catch","err","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/abhijit/Assembly-Line-Management-System/frontend/src/app/login/login.component.ts","/home/abhijit/Assembly-Line-Management-System/frontend/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AccessControlService } from '../services/access-control.service';\nimport { ConstantsService } from '../services/constants.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = \"\";\n  password: string = \"\";\n  loginStatus: string = \"\";\n  role: string = \"\";\n\n  \n  constructor(private constantsService: ConstantsService, private router: Router, private accessControlService: AccessControlService) { }\n\n  authenticate(){\n    let url = \"\";\n    if(this.role==\"admin\") url = this.constantsService.SERVER_IP_ADDRESS + \"admin\";\n    else if(this.role==\"productionManager\") url = this.constantsService.SERVER_IP_ADDRESS + \"productionManager\";\n    else if(this.role==\"lineChief\") url = this.constantsService.SERVER_IP_ADDRESS + \"lineChief\";\n    else if(this.role==\"supervisor\") url = this.constantsService.SERVER_IP_ADDRESS + \"supervisor\";\n\n    const data = {\n      \"operation\":\"login\",\n      \"username\": this.username,\n      \"password\": this.password\n    };\n\n    fetch(url, {\n      method: \"POST\",\n      mode: \"cors\", \n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\"Content-Type\": \"application/json\",},\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(data),\n  })\n      .then((resolve)=>{\n          console.log(\"Authentication has been done!\");\n          return resolve.json()\n      })\n      .then((data)=>{\n          console.log(data.authentication);\n          this.loginStatus = \"Status: \"+ data.authentication;\n          /*\n          sessionStorage.setItem(\"userid\", data.userInfo.userid);\n          sessionStorage.setItem(\"username\", data.userInfo.username);\n          sessionStorage.setItem(\"password\", data.userInfo.password);\n          sessionStorage.setItem(\"age\", data.userInfo.age);\n          sessionStorage.setItem(\"role\", data.userInfo.role);\n          sessionStorage.setItem(\"general_info\", data.userInfo.general_info);\n          sessionStorage.setItem(\"userHash\", data.userHash);\n          */\n         this.accessControlService.setUser({\n          \"userid\": <string>data.userInfo.userid,\n          \"username\": <string>data.userInfo.username,\n          \"age\": <number>data.userInfo.age,\n          \"role\": <string>data.userInfo.role,\n          \"general_info\": <string>data.userInfo.general_info,\n          \"userHash\": <string>data.userHash\n         });\n\n        if(data.nextPage!=\"none\") {\n          if(data.nextPage==\"admin-dashboard.html\") this.router.navigate([\"admin-dashboard\"])\n        }\n      })\n      .catch((err)=>{\n          console.log(err);\n      });\n  }\n\n}\n\n","  <div class=\"container loginBody\">\n    <img src=\"../../assets/alms-profile.png\" class=\"img\">\n    <form>\n      <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Enter Username\" name=\"username\" [(ngModel)]=\"username\">\n      </div>\n      <div class=\"form-group\">\n          <input type=\"password\" class=\"form-control\" placeholder=\"Enter Password\" name=\"password\" [(ngModel)]=\"password\">\n      </div>\n\n      <div class=\"form-group dropDown\">\n        <select class=\"form-control bootstrap-select\" [(ngModel)]=\"role\" name=\"role\">\n          <option value=\"admin\" selected=\"selected\">Select Role</option>\n          <option value=\"admin\">Admin</option>\n          <option value=\"productionManager\">Production Manager</option>\n          <option value=\"lineChief\">Line Chief</option>\n          <option value=\"supervisor\">Supervisor</option>\n        </select>\n      </div>     \n\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"authenticate()\">Login</button>\n\n      <span class=\"badge badge-secondary\">{{loginStatus}}</span>\n    </form>  \n  </div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}